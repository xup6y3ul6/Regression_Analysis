scale_color_identity(guide = "legend") +
scale_fill_identity(guide = "legend") +
scale_linetype_identity(guide = "legend") +
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity(guide = "legend") +
scale_fill_identity(guide = "legend") +
scale_linetype_identity(guide = "legend") +
guides(color = guide_legend("legned"),
fill = guide_legend("legned"),
linetype = guide_legend("legned")) +
theme_classic()
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity(guide = "legend") +
scale_fill_identity(guide = "legend") +
scale_linetype_identity(guide = "legend") +
guides(color = guide_legend("legned"),
fill = guide_legend("legned"),
linetype = guide_legend("legned")) +
theme_classic()
# guides(color = guide_legend("legned"),
#        fill = guide_legend("legned"),
#        linetype = guide_legend("legned")) +
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity(guide = "legend") +
scale_fill_identity(guide = "legend") +
scale_linetype_identity(guide = "legend") +
# guides(color = guide_legend("legned"),
#        fill = guide_legend("legned"),
#        linetype = guide_legend("legned")) +
theme_classic()
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity("trt", labels = letters[1:4],guide = "legend") +
scale_fill_identity("trt", labels = letters[1:4],guide = "legend") +
scale_linetype_identity("trt", labels = letters[1:4],guide = "legend") +
# guides(color = guide_legend("legned"),
#        fill = guide_legend("legned"),
#        linetype = guide_legend("legned")) +
theme_classic()
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity("Model Fit", labels = c("logit", "probit", "cloglog"), guide = "legend") +
scale_fill_identity("Model Fit", labels = c("logit", "probit", "cloglog"), guide = "legend") +
scale_linetype_identity("Model Fit", labels = labels = c("logit", "probit", "cloglog"), guide = "legend") +
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity("Model Fit", labels = c("logit", "probit", "cloglog"), guide = "legend") +
scale_fill_identity("Model Fit", labels = c("logit", "probit", "cloglog"), guide = "legend") +
scale_linetype_identity("Model Fit", labels = c("logit", "probit", "cloglog"), guide = "legend") +
theme_classic()
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity("Model Fit",
labels = c("logit", "probit", "cloglog"),
guide = "title") +
scale_fill_identity("Model Fit",
labels = c("logit", "probit", "cloglog"),
guide = "title") +
scale_linetype_identity("Model Fit",
labels = c("logit", "probit", "cloglog"),
guide = "title") +
theme_classic()
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity("Model Fit",
breaks = c("blue", "red", "forestgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_fill_identity("Model Fit",
breaks = c("lightblue", "lightpink", "lightgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_linetype_identity("Model Fit",
breaks = c("solid", "longdash", "dashed"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
theme_classic()
pi/sqrt(6)
sqrt(2)
beta <- data.frame(beta_logit = binom_logit$coefficients,
beta_probit = binom_probit$coefficients,
beta_probit_adj = binom_probit$coefficients * (pi/sqrt(3)),
beta_cloglog = binom_cloglog$coefficients,
beta_cloglog_adj = binom_cloglog$coefficients * sqrt(2),
bb = binom_cloglog$coefficients * (pi/sqrt(6)))
knitr::kable(beta, digits = 2)
a = c(164.519, -0.083, 0.0888, -0.439)
a * sqrt(2)
a * pi/sqrt(6)
a = c(164.519, -0.083, 0.0888, -0.310, -0.439, 0.154)
a * pi/sqrt(6)
a * sqrt(2)
beta <- data.frame(beta_logit = binom_logit$coefficients,
beta_probit = binom_probit$coefficients,
beta_probit_adj = binom_probit$coefficients * (pi/sqrt(3)),
beta_cloglog = binom_cloglog$coefficients,
beta_cloglog_adj = binom_cloglog$coefficients * sqrt(2))
knitr::kable(beta, digits = 2)
beta <- data.frame(beta_logit = binom_logit$coefficients,
beta_probit = binom_probit$coefficients,
beta_probit_adj = binom_probit$coefficients * (pi/sqrt(3)),
beta_cloglog = binom_cloglog$coefficients,
beta_cloglog_adj = binom_cloglog$coefficients * sqrt(2))
knitr::kable(beta, digits = 2)
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity("Model Fit",
breaks = c("blue", "red", "forestgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_fill_identity("Model Fit",
breaks = c("lightblue", "lightpink", "lightgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_linetype_identity("Model Fit",
breaks = c("solid", "longdash", "dashed"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
theme_classic()
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
geom_smooth(method = "lm") +
scale_color_identity("Binomial model",
breaks = c("blue", "red", "forestgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_fill_identity("Binomial model",
breaks = c("lightblue", "lightpink", "lightgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_linetype_identity("Binomial model",
breaks = c("solid", "longdash", "dashed"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
theme_classic()
ggplot(data, aes(x = LogDose, y = Propotion, weight = GroupSize)) +
geom_point() +
geom_smooth(aes(color = "blue", fill = "lightblue", linetype = "solid"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "logit")),
alpha = 0.25) +
geom_smooth(aes(color = "red", fill = "lightpink", linetype = "longdash"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "probit")),
alpha = 0.25) +
geom_smooth(aes(color = "forestgreen", fill = "lightgreen", linetype = "dashed"),
method = "glm", formula =  y ~ 1 + x,
method.args = list(family = binomial(link = "cloglog")),
alpha = 0.25) +
scale_color_identity("Binomial model",
breaks = c("blue", "red", "forestgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_fill_identity("Binomial model",
breaks = c("lightblue", "lightpink", "lightgreen"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
scale_linetype_identity("Binomial model",
breaks = c("solid", "longdash", "dashed"),
labels = c("logit", "probit", "cloglog"),
guide = "legend") +
theme_classic()
binom_models <- list(logit = binom_logit, probit = binom_probit, cloglog = binom_cloglog)
criterion <- data.frame(
perason_statistic = sapply(binom_models, function(.binom){
sum(residuals(.binom, type = "pearson")^2)
}),
deviance = sapply(binom_models, deviance),
AIC = sapply(binom_models, AIC),
BIC = sapply(binom_models, BIC)
)
knitr::kable(criterion, digits = 2)
?format
binom_cloglog_res = data.frame(
y_bar = data$Propotion,
y_fit = fitted(binom_cloglog),
pearson_res = residuals(binom_cloglog, type = "pearson"),
stand_pearson_res = rstandard(binom_cloglog, type = "pearson"),
deviance_res = residuals(binom_cloglog, type = "deviance"),
stand_deviance_res = rstandard(binom_cloglog, type = "deviance")
)
knitr::kable(binom_cloglog_res, digits = 2)
ggplot(binom_cloglog_res, aes(x = y_fit)) +
geom_point(aes(y = stand_pearson_res), shape = 19) +
geom_point(aes(y = stand_deviance_res), shape = 1) +
geom_hline(yintercept = qnorm(c(0.025, 0.975), mean = 0, sd = 1),
color = "red", linetype = "dashed") +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
binom_cloglog_res = data.frame(
y_bar = data$Propotion,
y_fit = fitted(binom_cloglog),
pearson_res = residuals(binom_cloglog, type = "pearson"),
stand_pearson_res = rstandard(binom_cloglog, type = "pearson"),
deviance_res = residuals(binom_cloglog, type = "deviance"),
stand_deviance_res = rstandard(binom_cloglog, type = "deviance")
)
knitr::kable(binom_cloglog_res, digits = 3)
qnorm(0.975)
ggplot(binom_cloglog_res, aes(x = y_fit)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.975), mean = 0, sd = 1),
color = "red", linetype = "dashed") +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
knitr::opts_chunk$set(
message = FALSE, 	warning = FALSE, comment = "",
fig.width = 5, fig.asp = 0.68, fig.align = "center",
eval = TRUE
)
binom_cloglog_res = data.frame(
LogDose = data$LogDose
y_bar = data$Propotion,
binom_cloglog_res = data.frame(
LogDose = data$LogDose,
y_bar = data$Propotion,
y_fit = fitted(binom_cloglog),
pearson_res = residuals(binom_cloglog, type = "pearson"),
stand_pearson_res = rstandard(binom_cloglog, type = "pearson"),
deviance_res = residuals(binom_cloglog, type = "deviance"),
stand_deviance_res = rstandard(binom_cloglog, type = "deviance")
)
knitr::kable(binom_cloglog_res, digits = 2)
ggplot(binom_cloglog_res, aes(x = LogDose)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.975), mean = 0, sd = 1),
color = "red", linetype = "dashed") +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
ggplot(binom_cloglog_res, aes(x = LogDose)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0, 0.975), mean = 0, sd = 1),
color = "red", linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
ggplot(binom_cloglog_res, aes(x = LogDose)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = "red", linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
ggplot(binom_cloglog_res, aes(x = LogDose)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
binom_cloglog_res %>%
pivot_longer(LogDose:y_fit, names_to = "x_name", values_to = "x_value") %>% head()
binom_cloglog_res %>%
pivot_longer(LogDose:y_fit, names_to = "x_name", values_to = "x_value") %>%
ggplot(aes(x = x_value)) +
facet_wrap(~ x_name) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
ggplot(binom_cloglog_res, aes(x = y_fit)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
gridExtra::grid.arrange(g1, g2)
g1 <- ggplot(binom_cloglog_res, aes(x = LogDose)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
theme_classic()
g2 <- ggplot(binom_cloglog_res, aes(x = y_fit)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
gridExtra::grid.arrange(g1, g2)
g1 <- ggplot(binom_cloglog_res, aes(x = LogDose)) +
geom_point(aes(y = stand_pearson_res), shape = 19) +
geom_point(aes(y = stand_deviance_res), shape = 1) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
theme_classic()
g2 <- ggplot(binom_cloglog_res, aes(x = y_fit)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
gridExtra::grid.arrange(g1, g2)
gridExtra::grid.arrange(g1, g2, nrow = 1)
gridExtra::grid.arrange(g1, g2)
ggplot(binom_cloglog_res, aes(x = y_fit)) +
geom_point(aes(y = stand_pearson_res, shape = 19)) +
geom_point(aes(y = stand_deviance_res, shape = 1)) +
geom_hline(yintercept = qnorm(c(0.025, 0.5, 0.975), mean = 0, sd = 1),
color = c("red", "blue", "red"),
linetype = c("dashed", "solid", "dashed")) +
scale_shape_identity("Residual", guide = "legend",
breaks = c(19, 1), labels = c("Pearson", "deviance")) +
labs(y = "standardized (Pearson / deviance) residual") +
theme_classic()
binom_cloglog2 <- glm(formula = cbind(Response, NoResponse) ~ 1 + LogDose + I(LogDose^2),
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog2)
anova(binom_cloglog, binom_cloglog2, test = "LRT")
quasibinom_cloglog <- update(binom_cloglog,
family = quasibinomial(link = "cloglog"))
summary(quasibinom_cloglog)
criterion$perason_statistic["cloglog"]
criterion$perason_statistic
(phi_p <- criterion$perason_statistic[3] / binom_cloglog$df.residual)
(phi_D <- criterion$deviance[3] / binom_cloglog$df.residual)
binom_cloglog <- glm(formula = cbind(Response, NoResponse) ~ 1 + LogDose,
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog)
binom_cloglog <- glm(formula = cbind(Response, NoResponse) ~ 1 + LogDose,
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog)
BIC(binom_cloglog2)
BIC(binom_cloglog)
binom_cloglog4 <- glm(formula = cbind(Response, NoResponse) ~ 1 +  I(exp(LogDose),
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog4)
binom_cloglog4 <- glm(formula = cbind(Response, NoResponse) ~ 1 +  I(exp(LogDose),
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog4)
binom_cloglog2 <- glm(formula = cbind(Response, NoResponse) ~ 1 + LogDose + I(LogDose^2),
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog2)
binom_cloglog4 <- glm(formula = cbind(Response, NoResponse) ~ 1 + I(LogDose^2),
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog4)
binom_cloglog4 <- glm(formula = cbind(Response, NoResponse) ~ 1 + I(exp(LogDose)),
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog4)
plot(binom_cloglog4)
plot(binom_cloglog)
plot(binom_cloglog4)
binom_cloglog_dose <- glm(formula = cbind(Response, NoResponse) ~ 1 + I(exp(LogDose)),
data = data,
family = binomial(link = "cloglog"))
summary(binom_cloglog_dose)
format(sum(residuals(binom_cloglog_dose, type = "pearson")^2), digits = 2)
format(deviance(binom_cloglog_binom), digits = 2)
format(deviance(binom_cloglog_dose), digits = 2)
