.weight_all <- Data$valid_vote / (predict(gauss_all_w2)*(1-predict(gauss_all_w2)))
LM_data <- Data %>%
mutate(agree = agree_rate,
weighted = .weight_all,
vote = vote_rate,
municipality = as.numeric(as.character(is_municipality)),
offshoreIsland = as.numeric(as.character(is_offshoreIsland)),
gender = gender_ratio,
age = age_med,
married = married_ratio,
college = college_ratio,
salary = salary_med)
rownames(LM_data) <- rownames(data)
.f2 <- agree~ 1 + (vote + municipality + offshoreIsland + gender + age + married + college+ salary)^2
gauss_2 <- glm(formula = .f2, weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
.f0 <- agree ~ 1
gauss_0 <- glm(formula = .f0, weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
.scope <- list(lower = .f0, upper = .f2)
LM1 <- step(gauss_0, scope = .scope, direction = "forward", trace = 0)
LM2 <- step(gauss_0, scope = .scope, direction = "forward", trace = 0, k = log(nrow(LM_data)))
LM3 <- step(gauss_2, direction = "backward", trace = 0)
LM4 <- step(gauss_2, direction = "backward", trace = 0, k = log(nrow(LM_data)))
LM5 <- step(gauss_2, direction = "both", trace = 0)
LM6 <- step(gauss_2, direction = "both", trace = 0, k = log(nrow(LM_data)))
subsets <- regsubsets(x = .f2, data = LM_data, weights = LM_data$weighted, nbest = 3, nvmax = 25, force.in = c(1:7))
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)) + 2,
which, rss, rsq, adjr2, cp, bic))
subsets <- as.data.frame(subsets)
subsets$aic <- subsets$bic - log(nrow(LM_data))*subsets$p + 2*subsets$p
rownames(subsets) <- NULL
# press
.combination <- lapply(1:nrow(subsets), function(x){
colnames(subsets)[which(subsets[x, 3:(ncol(subsets)-6)] == 1)+1]
})
.Y <- formula(.f2) %>% as.character() %>% strsplit(" ~ ")
Y <- .Y[[2]]
combination <- lapply(.combination, function(x){
X <- x %>% gsub(pattern = "[0-9]", replacement = "") # remove factor name with number
paste(Y, "~", paste(X, collapse = "+"))
})
lm_combination <- lapply(combination, function(x){lm(as.formula(x), data = LM_data, weights = LM_data$weighted)})
get_histogram(Data, "agree_rate")
get_histogram(Data, "vote_rate")
get_scatter_plot(Data, "vote_rate")
ggplot(Data, aes(x = location, y = agree_rate, color = location)) +
geom_boxplot() +
theme_bw() +
theme(legend.position = "none")
get_histogram(Data, "gender_ratio")
get_scatter_plot(Data, "gender_ratio")
get_histogram(Data, "age_med")
get_scatter_plot(Data, "age_med")
get_histogram(Data, "married_ratio")
get_scatter_plot(Data, "married_ratio")
get_histogram(Data, "college_ratio")
get_scatter_plot(Data, "college_ratio")
get_histogram(Data, "salary_med")
get_scatter_plot(Data, "salary_med")
get_histogram(Data, "salary_med")
get_scatter_plot(Data, "salary_med")
binom_models <- list(binom_ident, binom_logit, binom_probit, binom_cloglog)
model_names <- c("binom_identity", "binom_logit", "binom_probit", "binom_cloglog")
model_colors <- c("steelblue4", "steelblue3", "steelblue2", "steelblue1")
binom_fitted_plots <- vector(mode = "list", length = length(binom_models))
for (i in 1:length(binom_models)) {
binom_fitted_plots[[i]] <- get_fitted_plot(binom_models[[i]], model_names[i], model_colors[i])
}
grid.arrange(grobs = binom_fitted_plots, nrow = 2)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
message = FALSE, 	warning = FALSE, comment = "",
echo = FALSE
)
library(tidyverse)
library(gghighlight)
library(gridExtra)
library(car)
library(glmulti)
library(boot)
library(leaps)
library(MPV)
library(DT)
Data <- readRDS("data/Data.rds")
source("custom_function.R")
knitr::include_graphics("figures/分析流程.png")
knitr::include_graphics("figures/analysis_process.png")
xaringan:::inf_mr()
xaringan:::inf_mr()
xlims <- list(c(0.1, 0.5), c(-2.5, 2.5), c(-2.5, 2.5), c(-2.5, 2.5))
binom_eta_plots <- vector(mode = "list", length = length(binom_models))
for (i in 1:length(binom_models)) {
binom_eta_plots[[i]] <- get_eta_plot(binom_models[[i]], model_names[i], model_colors[i], xlims[[i]])
}
grid.arrange(grobs = binom_eta_plots, nrow = 2)
binom_rstandard_plots <- vector(mode = "list", length = length(binom_models))
for (i in 1:length(binom_models)) {
binom_rstandard_plots[[i]] <- get_rstandard_plot(binom_models[[i]], model_names[i], model_colors[i], "deviance")
}
grid.arrange(grobs = binom_rstandard_plots, nrow = 2)
M2$formula
M1$formula
M11$formula
M12$formula
formula(LM10)
subsets <- regsubsets(x = .f2, data = LM_data, weights = LM_data$weighted, nbest = 3, nvmax = 25, force.in = c(1:7))
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)) + 2,
which, rss, rsq, adjr2, cp, bic))
subsets <- as.data.frame(subsets)
subsets$aic <- subsets$bic - log(nrow(LM_data))*subsets$p + 2*subsets$p
rownames(subsets) <- NULL
# press
.combination <- lapply(1:nrow(subsets), function(x){
colnames(subsets)[which(subsets[x, 3:(ncol(subsets)-6)] == 1)+1]
})
.Y <- formula(.f2) %>% as.character() %>% strsplit(" ~ ")
Y <- .Y[[2]]
combination <- lapply(.combination, function(x){
X <- x %>% gsub(pattern = "[0-9]", replacement = "") # remove factor name with number
paste(Y, "~", paste(X, collapse = "+"))
})
lm_combination <- lapply(combination, function(x){lm(as.formula(x), data = LM_data, weights = LM_data$weighted)})
LM_data
.combination
LM_data$weighted
lm_combination <- lapply(combination, function(x){
lm(as.formula(x), data = LM_data, weights = LM_data$weighted)
})
# prepare data and wiehgt
.f <- agree_rate ~ 1 + (vote_rate + location + gender_ratio + age_med + married_ratio + college_ratio + salary_med)^2
gauss_all_w <-  glm(formula = .f, weights = .weight,
gaussian(link = "identity"), data = Data)
.weight2 <- Data$valid_vote / (predict(gauss_all_w)*(1-predict(gauss_all_w)))
gauss_all_w2 <-  glm(formula = .f2, weights = .weight2,
gaussian(link = "identity"), data = Data)
.f2 <- agree_rate ~ 1 + (vote_rate+ location + gender_ratio + age_med + married_ratio + college_ratio + salary_med)^2
gauss_ident_w <- glm(formula = .formula, weights = valid_vote,
family = gaussian(link = "identity"), data = Data)
#summary(gauss_ident_w)
.weight <- Data$valid_vote / (predict(gauss_ident_w)*(1-predict(gauss_ident_w)))
gauss_ident_w2 <- glm(formula = .formula, weights = .weight,
family = gaussian(link = "identity"), data = Data)
summary(gauss_ident_w2)
get_binom_XIC(gauss_ident_w2, k = 2, Npar = 10)
# prepare data and wiehgt
.f <- agree_rate ~ 1 + (vote_rate + location + gender_ratio + age_med + married_ratio + college_ratio + salary_med)^2
gauss_all_w <-  glm(formula = .f, weights = .weight,
gaussian(link = "identity"), data = Data)
.weight2 <- Data$valid_vote / (predict(gauss_all_w)*(1-predict(gauss_all_w)))
gauss_all_w2 <-  glm(formula = .f2, weights = .weight2,
gaussian(link = "identity"), data = Data)
.weight_all <- Data$valid_vote / (predict(gauss_all_w2)*(1-predict(gauss_all_w2)))
LM_data <- Data %>%
mutate(agree = agree_rate,
weighted = .weight_all,
vote = vote_rate,
municipality = as.numeric(as.character(is_municipality)),
offshoreIsland = as.numeric(as.character(is_offshoreIsland)),
gender = gender_ratio,
age = age_med,
married = married_ratio,
college = college_ratio,
salary = salary_med)
rownames(LM_data) <- rownames(data)
.f2 <- agree~ 1 + (vote + municipality + offshoreIsland + gender + age + married + college+ salary)^2
gauss_2 <- glm(formula = .f2, weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
.f0 <- agree ~ 1
gauss_0 <- glm(formula = .f0, weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
.scope <- list(lower = .f0, upper = .f2)
LM1 <- step(gauss_0, scope = .scope, direction = "forward", trace = 0)
LM2 <- step(gauss_0, scope = .scope, direction = "forward", trace = 0, k = log(nrow(LM_data)))
LM3 <- step(gauss_2, direction = "backward", trace = 0)
LM4 <- step(gauss_2, direction = "backward", trace = 0, k = log(nrow(LM_data)))
LM5 <- step(gauss_2, direction = "both", trace = 0)
LM6 <- step(gauss_2, direction = "both", trace = 0, k = log(nrow(LM_data)))
subsets <- regsubsets(x = .f2, data = LM_data, weights = LM_data$weighted, nbest = 3, nvmax = 25, force.in = c(1:7))
subsets <- with(summary(subsets),
cbind(p = as.numeric(rownames(which)) + 2,
which, rss, rsq, adjr2, cp, bic))
subsets <- as.data.frame(subsets)
subsets$aic <- subsets$bic - log(nrow(LM_data))*subsets$p + 2*subsets$p
rownames(subsets) <- NULL
# press
.combination <- lapply(1:nrow(subsets), function(x){
colnames(subsets)[which(subsets[x, 3:(ncol(subsets)-6)] == 1)+1]
})
.Y <- formula(.f2) %>% as.character() %>% strsplit(" ~ ")
Y <- .Y[[2]]
combination <- lapply(.combination, function(x){
X <- x %>% gsub(pattern = "[0-9]", replacement = "") # remove factor name with number
paste(Y, "~", paste(X, collapse = "+"))
})
lm_combination <- lapply(combination, function(x){
lm(as.formula(x), data = LM_data, weights = LM_data$weighted)
})
LM7 <- glm(formula = combination[[15]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
combination[[15]]
.^
.Y
combination[[1]]
combination[[2]]
combination[[5]]
# press
.combination <- lapply(1:nrow(subsets), function(x){
colnames(subsets)[which(subsets[x, 3:(ncol(subsets)-6)] == 1)+2]
})
.combination[[1]]
.Y <- formula(.f2) %>% as.character() %>% strsplit(" ~ ")
combination <- lapply(.combination, function(x){
X <- x %>% gsub(pattern = "[0-9]", replacement = "") # remove factor name with number
paste(Y, "~", paste(X, collapse = "+"))
})
lm_combination <- lapply(combination, function(x){
lm(as.formula(x), data = LM_data, weights = LM_data$weighted)
})
press <- sapply(lm_combination, function(x){PRESS(x)})
subsets$PRESS <- press
criterion <- data.frame(
index = c("rsq", "adjr2", "cp", "aic", "bic", "PRESS"),
critera.fun = c("max", "max", "min", "min", "min", "min")
)
g <- list()
for(i in 1:nrow(criterion)){
.index <- criterion[i, "index"]
.critera.fun <- criterion[i, "critera.fun"] %>% as.character()
g[[i]] <- subsets %>%
gather(key = index, value = value, rsq:PRESS) %>%
filter(index == .index) %>%
ggplot(aes(x = p, y = value)) +
geom_point(size = 0.6) +
scale_x_continuous(breaks = seq(min(subsets$p), max(subsets$p), 2)) +
stat_summary(fun.y = .critera.fun, colour = "orange", geom = "line") +
labs(title = .index, y = NULL) +
theme_bw()
}
grid.arrange(grobs = g, nrow = 2)
grid.arrange(grobs = g, nrow = 2)
grid.arrange(grobs = g, nrow = 2)
grid.arrange(grobs = g, nrow = 2)
grid.arrange(grobs = g, nrow = 2)
g <- list()
for(i in 1:nrow(criterion)){
.index <- criterion[i, "index"]
.critera.fun <- criterion[i, "critera.fun"] %>% as.character()
g[[i]] <- subsets %>%
gather(key = index, value = value, rsq:PRESS) %>%
filter(index == .index) %>%
ggplot(aes(x = p, y = value)) +
geom_point(size = 0.6) +
scale_x_continuous(breaks = seq(min(subsets$p), max(subsets$p), 2)) +
stat_summary(fun.y = .critera.fun, colour = "orange", geom = "line") +
labs(title = .index, y = NULL) +
theme_bw()
}
grid.arrange(grobs = g, nrow = 2)
grid.arrange(grobs = g, nrow = 2)
LM7 <- glm(formula = combination[[15]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
LM8 <- glm(formula = combination[[17]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
LM9 <- glm(formula = combination[[19]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
LM10 <- glm(formula = combination[[33]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
LM11 <- glm(formula = combination[[34]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
LM12 <- glm(formula = combination[[35]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
LM_models <- list(LM1, LM2, LM3, LM4, LM5, LM6, LM7, LM8, LM9, LM10, LM11, LM12)
LM_criterias <- data.frame(
AIC = sapply(LM_models, AIC),
BIC = sapply(LM_models, BIC),
binom_AIC = sapply(LM_models, function(LM_model){
get_binom_XIC(LM_model, k = 2, length(LM_model$codefficients)+1)
}),
binom_BIC = sapply(LM_models,function(LM_model){
get_binom_XIC(LM_model, k = log(nrow(Data)), length(LM_model$codefficients)+1)
}),
Deviance = sapply(LM_models, deviance),
CV = sapply(LM_models, function(model){cv.glm(LM_data, model)$delta[1]})
)
LM_criterias
LM_criterias
formula(LM10)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
message = FALSE, 	warning = FALSE, comment = "",
echo = FALSE, fig.align='center'
)
library(tidyverse)
library(DT)
Data <- readRDS("data/Data.rds")
LM_data <- Data %>%
mutate(agree = agree_rate,
weighted = .weight_all,
vote = vote_rate,
municipality = as.numeric(as.character(is_municipality)),
offshoreIsland = as.numeric(as.character(is_offshoreIsland)),
gender = gender_ratio,
age = age_med,
married = married_ratio,
college = college_ratio,
salary = salary_med)
rownames(LM_data) <- rownames(data)
source("custom_function.R")
.f_M2 <- agree ~ college + location + vote + married +
salary + age + gender + location:married +
college:location + location:salary + college:married +
college:salary + vote:age + location:age +
married:age + salary:age + location:gender +
married:salary + college:gender + vote:married +
vote:gender + vote:salary + college:vote +
age:gender + married:gender
M2 <- glm(formula = .f_M2, data = LM_data, weights = valid_vote,
family = binomial(link = "identity"))
summary(M2)
.f_LM10 <- agree ~ vote + municipality + offshoreIsland + gender + age + married + college + salary + municipality:age + municipality:married + municipality:college + municipality:salary + offshoreIsland:age +   offshoreIsland:college + gender:college + age:married + age:salary + married:college
LM10 <- glm(formula = combination[[33]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
summary(LM10)
influentialDF <- data.frame(
"DFFITS"   = dffits(LM10) %>% round(digits = 3),
"Cooks_D"  = cooks.distance(LM10) %>% round(digits = 3),
"DFBETA"   = dfbeta(LM10) %>% round(digits = 3)
)
sketch <-  htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 2, ""),
th(rowspan = 2, 'DFFITS'),
th(rowspan = 2, 'Cooks_D'),
th(colspan = ncol(dfbeta(LM10)), 'DFBETA')
),
tr(
lapply(paste0("b", 1:(ncol(dfbeta(LM10)))), th)
)
)
))
p <- LM10$coefficients %>% length()
n <- LM10$data %>% nrow()
DFFITS_critical <- 2*sqrt(p/n)
#CD_50 <- pf(0.5, p, n-p)
#CD_20 <- pf(0.2, p, n-p)
CD_0.5 <- 0.5
DFBETAS_critical <- 2/sqrt(n)
datatable(influentialDF,
fillContainer = FALSE,
container = sketch,
extensions = 'FixedColumns',
options = list(scrollX = TRUE,
fixedColumns = TRUE,
pageLength = 10,
autoWidth = TRUE,
columnDefs = list(list(width = '65px', targets = c(0)))
)) %>%
formatStyle(0:ncol(influentialDF), fontSize = "10pt") %>%
formatStyle("DFFITS",
color = styleInterval(c(-DFFITS_critical, DFFITS_critical), c('red', 'black', 'red'))) %>%
formatStyle("Cooks_D",
color = styleInterval(c(CD_0.5), c("black", "red"))) %>%
formatStyle(3:nrow(influentialDF),
color = styleInterval(c(DFBETAS_critical), c("black", "red")))
datatable(influentialDF,
fillContainer = FALSE,
container = sketch,
extensions = 'FixedColumns',
options = list(scrollX = TRUE,
fixedColumns = TRUE,
pageLength = 10,
autoWidth = TRUE,
columnDefs = list(list(width = '65px', targets = c(0)))
)) %>%
formatStyle(0:ncol(influentialDF), fontSize = "10pt") %>%
formatStyle("DFFITS",
color = styleInterval(c(-DFFITS_critical, DFFITS_critical), c('red', 'black', 'red'))) %>%
formatStyle("Cooks_D",
color = styleInterval(c(CD_0.5), c("black", "red"))) %>%
formatStyle(3:nrow(influentialDF),
color = styleInterval(c(DFBETAS_critical), c("black", "red")))
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
message = FALSE, 	warning = FALSE, comment = "",
echo = FALSE, fig.align='center'
)
library(tidyverse)
library(DT)
Data <- readRDS("data/Data.rds")
LM_data <- Data %>%
mutate(agree = agree_rate,
vote = vote_rate,
municipality = as.numeric(as.character(is_municipality)),
offshoreIsland = as.numeric(as.character(is_offshoreIsland)),
gender = gender_ratio,
age = age_med,
married = married_ratio,
college = college_ratio,
salary = salary_med)
rownames(LM_data) <- rownames(data)
source("custom_function.R")
.f2 <- agree_rate ~ 1 + (vote_rate + location + gender_ratio + age_med + married_ratio + college_ratio + salary_med)^2
gauss_all_w <-  glm(formula = .f2, weights = .weight,
gaussian(link = "identity"), data = Data)
.weight2 <- Data$valid_vote / (predict(gauss_all_w)*(1-predict(gauss_all_w)))
gauss_all_w2 <-  glm(formula = .f2, weights = .weight2,
gaussian(link = "identity"), data = Data)
.weight_all <- Data$valid_vote / (predict(gauss_all_w2)*(1-predict(gauss_all_w2)))
LM_data <- LM_data %>%
add_column(weighted = .weight_all)
.f2 <- agree ~ 1 + (vote + municipality + offshoreIsland + gender + age + married + college+ salary)^2
gauss_all_w <-  glm(formula = .f2, weights = .weight,
gaussian(link = "identity"), data = Data)
.f2 <- agree ~ 1 + (vote + municipality + offshoreIsland + gender + age + married + college+ salary)^2
.weight <- Data$valid_vote / (predict(gauss_ident_w2)*(1-predict(gauss_ident_w2)))
gauss_all_w <-  glm(formula = .f2, weights = .weight,
gaussian(link = "identity"), data = Data)
.f2 <- agree ~ 1 + (vote + municipality + offshoreIsland + gender + age + married + college+ salary)^2
.weight <- Data$valid_vote / (predict(gauss_ident_w2)*(1-predict(gauss_ident_w2)))
gauss_all_w <-  glm(formula = .f2, weights = .weight,
gaussian(link = "identity"), data = LM_data)
.weight2 <- Data$valid_vote / (predict(gauss_all_w)*(1-predict(gauss_all_w)))
gauss_all_w2 <-  glm(formula = .f2, weights = .weight2,
gaussian(link = "identity"), data = LM_data)
.weight_all <- Data$valid_vote / (predict(gauss_all_w2)*(1-predict(gauss_all_w2)))
LM_data <- LM_data %>%
add_column(weighted = .weight_all)
.f_LM10 <- agree ~ vote + municipality + offshoreIsland + gender + age + married + college + salary + municipality:age + municipality:married + municipality:college + municipality:salary + offshoreIsland:age +   offshoreIsland:college + gender:college + age:married + age:salary + married:college
LM10 <- glm(formula = combination[[33]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
summary(LM10)
.f2 <- agree ~ 1 + (vote + municipality + offshoreIsland + gender + age + married + college+ salary)^2
.weight <- LM_data$valid_vote / (predict(gauss_ident_w2)*(1-predict(gauss_ident_w2)))
gauss_all_w <-  glm(formula = .f2, weights = .weight,
gaussian(link = "identity"), data = LM_data)
.weight2 <- LM_data$valid_vote / (predict(gauss_all_w)*(1-predict(gauss_all_w)))
gauss_all_w2 <-  glm(formula = .f2, weights = .weight2,
gaussian(link = "identity"), data = LM_data)
.weight_all <- Data$valid_vote / (predict(gauss_all_w2)*(1-predict(gauss_all_w2)))
LM_data <- LM_data %>%
add_column(weighted = .weight_all)
.f_LM10 <- agree ~ vote + municipality + offshoreIsland + gender + age + married + college + salary + municipality:age + municipality:married + municipality:college + municipality:salary + offshoreIsland:age +   offshoreIsland:college + gender:college + age:married + age:salary + married:college
LM10 <- glm(formula = combination[[33]], weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
summary(LM10)
.f_LM10 <- agree ~ vote + municipality + offshoreIsland + gender + age + married + college + salary + municipality:age + municipality:married + municipality:college + municipality:salary + offshoreIsland:age +   offshoreIsland:college + gender:college + age:married + age:salary + married:college
LM10 <- glm(formula = .f_LM10, weights = weighted,
family = gaussian(link = "identity"), data = LM_data)
summary(LM10)
knitr::include_graphics("figures/lm_residual.png")
knitr::include_graphics("figures/lm_cooks_distance.png")
knitr::include_graphics("figures/lm_qqplot.png")
xaringan:::inf_mr()
criterion <- data.frame(
index = c("rsq", "adjr2", "cp", "aic", "bic", "PRESS"),
critera.fun = c("max", "max", "min", "min", "min", "min")
)
g <- list()
for(i in 1:nrow(criterion)){
.index <- criterion[i, "index"]
.critera.fun <- criterion[i, "critera.fun"] %>% as.character()
g[[i]] <- subsets %>%
gather(key = index, value = value, rsq:PRESS) %>%
filter(index == .index) %>%
ggplot(aes(x = p, y = value)) +
geom_point(size = 0.6) +
scale_x_continuous(breaks = seq(min(subsets$p), max(subsets$p), 2)) +
stat_summary(fun.y = .critera.fun, colour = "orange", geom = "line") +
labs(title = .index, y = NULL) +
theme_bw()
}
grid.arrange(grobs = g, nrow = 2)
grid.arrange(grobs = g, nrow = 2)
|||
|--|--|
|||
|||
|||
|||
xaringan:::inf_mr()
.f_M2 <- agree ~ college + location + vote + married +
salary + age + gender + location:married +
college:location + location:salary + college:married +
college:salary + vote:age + location:age +
married:age + salary:age + location:gender +
married:salary + college:gender + vote:married +
vote:gender + vote:salary + college:vote +
age:gender + married:gender
M2 <- glm(formula = .f_M2, data = LM_data, weights = valid_vote,
family = binomial(link = "identity"))
summary(M2)
summary(binom_best)
Data$agree_rate
summary(binom_best)
Data$agree_rate
View(Data)
xaringan:::inf_mr()
View(Data)
levels(Data$location)
as.factor(Data$location,
levels = c("county", "special municipality", "offshore island"),
labels = c("county", "municipality", "island"))
Data$location
xaringan:::inf_mr()
View(Data)
pagedown::chrome_print("referendum14_slide.Rmd")
pagedown::chrome_print("referendum14_slide.Rmd", browser = "C:\\Program Files (x86)\\BraveSoftware\\Brave-Browser\\Application\\brave.exe")
