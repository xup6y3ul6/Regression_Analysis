lm.list <- list(lm.20, lm.36, lm.37)
getCoefficient <- function(lm.list, coefNames){
.coef <- lapply(lm.list, coefficients)
coef <- do.call(rbind, .coef)
colnames(coef) <- coefNames
coef <- as.tibble(coef) %>%
mutate(sector = c("(20)", "(36)", "(37)"),
.before = `log(alpha)`)
}
coef <- getCoefficient(lm.list, coefNames = c("log(alpha)", "beta1", "beta2"))
coef %>% mutate(alpha = exp(`log(alpha)`), .before = `log(alpha)`)
lm.cnstr.20 <- lm(I(Val.20 - Lab.20) ~ 1 + I(Cap.20 - Lab.20), logdata)
lm.cnstr.36 <- lm(I(Val.36 - Lab.36) ~ 1 + I(Cap.36 - Lab.36), logdata)
lm.cnstr.37 <- lm(I(Val.37 - Lab.37) ~ 1 + I(Cap.37 - Lab.37), logdata)
lm.cnstr.list <- list(lm.cnstr.20, lm.cnstr.36, lm.cnstr.37)
coef.cnstr <- getCoefficient(lm.cnstr.list, coefNames = c("log(alpha)", "beta1"))
coef.cnstr %>%
mutate(alpha = exp(`log(alpha)`), .before = `log(alpha)`) %>%
mutate(beta2 = 1 - beta1)
lm2.20 <- lm(Val.20 ~ 1 + YEAR + Cap.20 + Lab.20, logdata)
lm2.36 <- lm(Val.36 ~ 1 + YEAR + Cap.36 + Lab.36, logdata)
lm2.37 <- lm(Val.37 ~ 1 + YEAR + Cap.37 + Lab.37, logdata)
lm2.list <- list(lm2.20, lm2.36, lm2.37)
coef2 <- getCoefficient(lm2.list, coefNames = c("log(alpha)", "log(eta)", "beta1", "beta2"))
coef2 %>%
mutate(alpha = exp(`log(alpha)`), .before = `log(alpha)`) %>%
mutate(eta = exp(`log(eta)`), .before = `log(eta)`)
lm2.cnstr.20 <- lm(I(Val.20 - Lab.20) ~ 1 + YEAR + I(Cap.20 - Lab.20), logdata)
lm2.cnstr.36 <- lm(I(Val.36 - Lab.36) ~ 1 + YEAR + I(Cap.36 - Lab.36), logdata)
lm2.cnstr.37 <- lm(I(Val.37 - Lab.37) ~ 1 + YEAR + I(Cap.37 - Lab.37), logdata)
lm2.cnstr.list <- list(lm2.cnstr.20, lm2.cnstr.36, lm2.cnstr.37)
coef.cnstr <- getCoefficient(lm.cnstr.list, coefNames = c("log(alpha)", "beta1"))
coef.cnstr %>%
mutate(alpha = exp(`log(alpha)`), .before = `log(alpha)`) %>%
mutate(beta2 = 1 - beta1)
coef2 <- getCoefficient(lm2.list, coefNames = c("log(alpha)", "log(eta)", "beta1", "beta2"))
coef2 %>%
mutate(alpha = exp(`log(alpha)`), .before = `log(alpha)`) %>%
mutate(eta = exp(`log(eta)`), .before = `log(eta)`)
plot(lm.20)
plot(lm.20)
coef2.cnstr <- getCoefficient(lm2.cnstr.list, coefNames = c("log(alpha)", "log(eta)", "beta1"))
coef2.cnstr %>%
mutate(alpha = exp(`log(alpha)`), .before = `log(alpha)`) %>%
mutate(eta = exp(`log(eta)`), .before = `log(eta)`) %>%
mutate(beta2 = 1 - beta1)
logdata <- data %>%
mutate(across(contains("."), log))
logdata
data
data <- read_csv("exhibit_2.9.csv") %>%
selcet(-X1)
data
data <- read_csv("exhibit_2.9.csv") %>%
selcet(-X1)
data <- read_csv("exhibit_2.9.csv") %>%
select(-X1)
data
data <- read_csv("exhibit_2.9.csv") %>%
select(-X1)
data
library(tidyverse)
data <- read_csv("exhibit_2.9.csv") %>%
select(-X1)
data
data <- read_csv("exhibit_2.9.csv") %>%
select(-1)
data <- read_csv("exhibit_2.9.csv") %>%
select(-1)
data <- read_csv("exhibit_2.9.csv") %>%
select(-Index)
data
data <- read_csv("exhibit_2.9.csv") %>%
select(-Index)
data <- read_csv("exhibit_2.9.csv")
data
library(tidyverse)
data <- read_csv("exhibit_2.9.csv")
select(-Index)
library(tidyverse)
data <- read_csv("exhibit_2.9.csv")
data
library(tidyverse)
data <- read_csv("exhibit_2.9.csv") %>%
select(-X1)
data
a <- function(n){
x <- rep(1, n)
y <- 1:n
z = x/y
sum(z)
}
a(5)
a(1)
a(10)
a(100)
a(1000)
a(10^5)
knitr::opts_chunk$set(
message = FALSE, 	warning = FALSE, comment = "",
fig.width = 5, fig.asp = 0.68, fig.align = "center",
eval = TRUE
)
full_lm <- lm(y ~ 1 + x.1 + x.2 + x.3 + x.4 + x.5, data)
data <- readxl::read_excel("E3.7.xlsx", col_names =TRUE)
data
full_lm <- lm(y ~ 1 + x.1 + x.2 + x.3 + x.4 + x.5, data)
summary(full_lm)
reduced_lm <- lm(y ~ 1 + x.3 + x.5, data)
summary(reduced_lm)
anova(full_lm, reduce_lm)
reduced_lm <- lm(y ~ 1 + x.3 + x.5, data)
summary(reduced_lm)
reduced_lm <- lm(y ~ 1 + x.3 + x.5, data)
summary(reduced_lm)
anova(full_lm, reduced_lm)
reduced2_lm <- lm(y ~ 1 + x.1 + x.3 + x.5, data)
summary(reduced2_lm)
anova(full_lm, reduced2_lm)
anova(reduced2_lm, full_lm)
confint(full_lm, parm ="x.1", lebel = 0.95)
confint(full_lm, parm = "x.1", lebel = 0.95)
confint(full_lm, parm = c(1, 0), lebel = 0.95)
confint(full_lm, parm = c(1, 0, 1, 1, 0), lebel = 0.95)
confint(full_lm, parm = c(1, 3, 5), lebel = 0.95)
.constrasts = list(test = c(0, 0, 0, 1, 0, 2))
.contrasts = list(test = c(0, 0, 0, 1, 0, 2))
contrasts(full_lm, contrasts = .contrasts)
pigs.lm <- lm(log(conc) ~ source + factor(percent), data = pigs)
data("pig", package = "emmeans")
data("pig", package = "emmeans")
pigs.lm <- lm(log(conc) ~ source + factor(percent), data = pigs)
data("pigs", package = "emmeans")
pigs.lm <- lm(log(conc) ~ source + factor(percent), data = pigs)
lsmeans(pigs.lm, "source")
emmeanslsmeans(pigs.lm, "source")
emmeans::lsmeans(pigs.lm, "source")
pigs.lm
data("pigs", package = "emmeans")
pigs.lm <- lm(log(conc) ~ source + factor(percent), data = pigs)
pigs.lm
emmeans::lsmeans(pigs.lm, "source")
library(multcomp)
K <- matrix(c(0, 1, 0, 0, 0, 0), nrow = 1)
t <- glht(full_lm, linfct = K)
summary(t)
summary(full_lm)
K <- matrix(c(0, 1, 0, 0, 0, 0), nrow = 1)
t <- glht(full_lm, linfct = K)
summary(t)
summary(full_lm)
K <- rbind(c(0, 1, 0, 0, 0, 0),
c(0, 0, 1, 0, 0, 0),
c(0, 0, 0, 1, 0, 2))
t <- glht(full_lm, linfct = K)
summary(t)
K <- rbind(c(0, 1, 0, 0, 0, 0),
c(0, 0, 1, 0, 0, 0),
c(0, 0, 0, 1, 0, 2))
t <- glht(full_lm, linfct = K)
summary(t)
summary(full_lm)
K <- rbind(c(0, 1, 0, 0, 0, 0),
c(0, 0, 1, 0, 0, 0),
c(0, 0, 0, 1, 0, 2))
t <- glht(full_lm, linfct = K)
summary(t)
summary(full_lm)
confint(t)
K <- rbind(c(0, 1, 0, 0, 0, 0),
c(0, 0, 1, 0, 0, 0),
c(0, 0, 0, 1, 0, 2))
t <- glht(full_lm, linfct = K)
summary(t)
confint(t)
class(t)
confint(t, level = 0.95)
confint(full.lm, level = 0.95)
confint(full_lm, level = 0.95)
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
K <- matrix(c(0, 1, 0, 0, 0, 0), nrow = 1)
t <- glht(full_lm, linfct = K)
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
K2 <- rbind(c(0, 1, 0, 0, 0, 0),
c(0, 0, 1, 0, 0, 0),
c(0, 0, 0, 1, 0, 2))
t2 <- glht(full_lm, linfct = K2)
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(t2, levle = 0.95, type = "none")
plot(confint(t))
plot(confint(t2))
confint(t2, levle = 0.95, type = "free")
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(t2, levle = 0.95, type = "free")
confint(t2, levle = 0.95, type = "single-step")
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(t2, levle = 0.95, type = "single-step")
confint(t2, levle = 0.95, type = NULL)
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(t2, levle = 0.95, type = NULL)
confint(t2, levle = 0.95, type = NA)
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(t2, levle = 0.95)
confint(t2, levle = 0.95, test = "holm")
confint(t2, levle = 0.95, test = "BY")
confint(t2, levle = 0.95, test = "none")
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(t2, level = 0.95, calpha = univariate_calpha())
confint(t2, level = 0.95, test = "none")
confint(full_lm, level = 0.95)
confint(t, level = 0.95)
confint(t2, level = 0.95)
confint(t2, level = 0.95, test = "none")
confint(t2, level = 0.95, calpha = univariate_calpha())
contrast_list = rbind(a = c(0, 1, 0, 0, 0, 0))
full_glht <- glht(full_lm, linfct = contrast_list)
summary(full_glht)
confint(full_glht)
contrast_list
contrast_list <-  rbind(a = c(0, 1, 0, 0, 0, 0),
b = c(0, 0, 0, 1, 0, 2))
confint(full_lm, parm = "x.1", level = 0.95)
contrast_list
library(multcomp)
contrast_list <-  rbind(a = c(0, 1, 0, 0, 0, 0),
b = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
confint(full_glht)
contrast_list <-  rbind("a" = c(0, 1, 0, 0, 0, 0),
b = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
confint(full_glht)
contrast_list <-  rbind("beta_1" = c(0, 1, 0, 0, 0, 0),
"beta_3+2*beta_5" = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
confint(full_glht)
library(multcomp)
contrast_list <-  rbind("beta_1" = c(0, 1, 0, 0, 0, 0),
"beta_3+2*beta_5" = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
confint(full_glht,
level = 0.95,
calpha = univariate_calpha()) # specify univariate confidence intervals
contrast_list <-  rbind("beta_1" = c(0, 1, 0, 0, 0, 0),
"beta_3 + 2*beta_5" = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
confint(full_glht,
level = 0.95,
calpha = univariate_calpha()) # specify univariate confidence intervals
plot(full_confint)
library(multcomp)
contrast_list <-  rbind("beta_1" = c(0, 1, 0, 0, 0, 0),
"beta_3 + 2*beta_5" = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
full_confint <- confint(full_glht,
level = 0.95,
calpha = univariate_calpha()) # specify univariate confidence intervals
full_confint
plot(full_confint)
contrast_list <-  rbind("β1" = c(0, 1, 0, 0, 0, 0),
"β3 + 2*β5" = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
full_confint <- confint(full_glht,
level = 0.95,
calpha = univariate_calpha()) # specify univariate confidence intervals
full_confint
plot(full_confint)
library(multcomp)
contrast_list <-  rbind("β1" = c(0, 1, 0, 0, 0, 0),
"β3+2*β5" = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
full_confint <- confint(full_glht,
level = 0.95,
calpha = univariate_calpha()) # specify univariate confidence intervals
full_confint
plot(full_confint)
summary(full_glht)
library(multcomp)
contrast_list <-  rbind("β1" = c(0, 1, 0, 0, 0, 0),
"β3+2*β5" = c(0, 0, 0, 1, 0, 2))
full_glht <- glht(full_lm, linfct = contrast_list)
summary(full_glht)
full_confint <- confint(full_glht,
level = 0.95,
calpha = univariate_calpha()) # specify univariate confidence intervals
full_confint
plot(full_confint)
xaringan:::inf_mr()
xaringan:::inf_mr()
install.packages("pagedown")
install.packages("xfun")
install.packages("xfun")
x <- rnorm(1000)
x2 <- x^2
cor(x, x2)
x3 <- x^3
cor(data.frame(x, x2, x3))
x <- runif(1000)
x2 <- x^2
x3 <- x^3
cor(data.frame(x, x2, x3))
x <- rbeta(1000, 2, 2)
x2 <- x^2
x3 <- x^3
cor(data.frame(x, x2, x3))
x <- c(1,2,3,4)
x2 <- x^2
x3 <- x^3
cor(data.frame(x, x2, x3))
#Raw:
fit.raw <- lm(Petal.Length ~ Petal.Width + I(Petal.Width^2) +
I(Petal.Width^3), data = iris)
summary(fit.raw)
#Orthogonal
fit.orth <- lm(Petal.Length ~ stats::poly(Petal.Width, 3), data = iris)
summmary(fit.orth)
summary(fit.orth)
stats::poly(Petal.Width, 3)
stats::poly(iris$Petal.Width, 3)
iris$Petal.Width
t.test(1:5, 3:9)
ln(7)
log(7)
log(8)
pnorm(0)
pnorm(0.1)
pnorm(0.2)
pnorm(0.1.5)
pnorm(0.15)
pnorm(0.3)
citation()
citaion(package = "Rjags")
citation("rjags")
citation("R2jags")
citation("psych")
citation()
citaion()
citation()
citation("psych")
runShiny()
install.packages("posterdown")
install.packages("pagedown")
library(lm.br)
lm.br
knitr::opts_chunk$set(
message = FALSE, 	warning = FALSE, comment = "",
fig.align = "center",
eval = TRUE
)
library(tidyverse)
data5 <- read_csv("W_pipeline.csv")
data5_lm <- lm(Lab ~ 1 + Field, data5)
summary(data5_lm)
data5 <- data5 %>%
add_column(residual = residuals(data5_lm),
studentized_res = rstudent(data5_lm))
g1 <- ggplot(data5, aes(x = Field, y = Lab)) +
geom_point() + geom_smooth(method = "lm") + theme_classic()
g2 <- ggplot(data5, aes(x = Field, y = studentized_res)) +
geom_point() +
geom_hline(yintercept = qt(0.05/2, data5_lm$df.residual - 1), color = "red") +
geom_hline(yintercept = qt((1-0.05/2), data5_lm$df.residual - 1), color = "red") +
theme_classic()
grid.arrange(g1, g2, nrow = 1)
library(lmtest)
bptest(data5_lm, studentize = TRUE)
res_lm <- lm(I(log(residual^2)) ~ 1 + Field, data5)
res_lm
summary(res_lm)
res_lm <- lm(I(residual^2) ~ 1 + Field, data5)
summary(res_lm)
vignette( "lm.br" )
data5 <- data5 %>%
mutate(Batch = factor(Batch))
data5_lm2 <- lm(Lab ~ 1 + Field + Batch, data5)
summary(data5_lm2)
res_lm2 <- lm(I(residual_2^2)~ 1+Field+Batch, data5_lm2)
data5_2
data5_2 <- data5 %>% add_column(residual_2 = residuals(data5_lm2))
data5_2
res_lm2 <- lm(I(residual_2^2)~ 1+Field+Batch, data5_2)
summary(res_lm2)
res_lm2 <- lm(I(log(residual_2^2))~ 1+Field+Batch, data5_2)
summaary(res_lm2)
summary(res_lm2)
res_lm2 <- lm(I(residual_2^2)~ 1+Batch, data5_2)
res_lm2
summary(res_lm2)
# install.packages("CCTpack", dependencies = TRUE)
library(CCTpack)
data(package = "CCTpack")
View(continuousdata)
data(continuousdata)
View(continuousdata)
cctfit <- cctapply(data = continuousdata,
clusters = 1, itemdiff = F, seed = 1,
samples = 10000,chains = 3,burnin = 2000)
cctresults(cctfit)
y = factor(c(1, 2, 1, 2, 1, 2))
y
summary(y)
data <- data.frame(x = 1:6,
y = c(0, 1, 0, 1, 0, 1))
data <- data.frame(x = 1:6,
y = factor(c(0, 1, 0, 1, 0, 1)))
summary(data)
data <- data.frame(x = 1:6,
y = factor(c(1,1,1,2,2,2)))
data <- data.frame(x = 1:6,
y = c(1,1,1,2,2,2))
summary(data)
data$y <-
summary(y)
data$y <- factor(data$y)
summary(y)
summary(data)
data
factor(data$y)
data
data <- data.frame(x = 1:6,
y = c(1,1,1,2,2,2))
summary(data)
data$y <- factor(data$y)
summary(data)
y = c("1","1","1","2","2"","2"))
data <- data.frame(x = 1:6,
y = c("1","1","1","2","2","2"))
summary(data)
data$y <- factor(data$y)
summary(data)
data
data <- data.frame(x = 1:6,
y = c("0","0","0","2","2","2"))
summary(data)
data$y <- factor(data$y)
summary(data)
plot(data$x, data$y)
qF(0.95, 2, 117)
qf(0.95, 2, 117)
qf(0.95, 1, 118)
sqrt(60)*sqrt(6)/12
sqrt(40)*sqrt(6)/12
sqrt(60)*3/12
x = matrix(c(1, 2, 3, 4, 0, 6), byrow = TRUE, nrow = 2)
x
y = as.vactor(x)
y = vactor(x)
y = vector(x)
y = as.vector(x)
y
y = as.vector(t(x))
y
result = rep(1:length(y), times = y)
result
x = matrix(c(1, 2, 3, 4, 0, 6), byrow = TRUE, nrow = 2)
x
y = as.vector(t(x))
y
result = rep(1:length(y), times = y)
result
rep(1:length(y), times = x)
rep(1:length(y), times = t(x))
size(x)
length(x)
rep(1:length(x), times = t(x))
x = matrix(c(1, 2, 3, 4, 0, 6), byrow = TRUE, nrow = 2)
x
rep(1:length(x), times = t(x))
a = matrix(1:length(x))
a
a = matrix(1:length(x), nrow = dim(x)[1])
a
a = matrix(1:length(x), nrow = dim(x)[1], byrow = TRUE)
a %x% x
0.3/(1/sqrt(30))
1-pn(1.64)
1-pnorm(1.64)
printplot <- function(i){
x <- rnorm(100)
hist(x, title = paste0("plot ", i))
}
printplot(1)
hist(x, main = paste0("plot ", i))
printplot <- function(i){
x <- rnorm(100)
hist(x, main = paste0("plot ", i))
}
printplot(1)
setwd("C:/Users/Nick Lin/OneDrive - g.ntu.edu.tw/109_心理碩二/迴歸分析/HW5")
dev.off()
pdf("test.pdf", width = 5, hight = 5)
pdf("test.pdf", width = 5, height = 5)
for (i in 1:3) {
printplot(i)
}
dev.off()
