if max < num_vec[i]:
max = num_vec[i]
print max
def findMax(num_vec):
num_vec = input("input numeric vector:")
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print max
def findMax(num_vec):
num_vec = input("input numeric vector:")
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
def findMax(num_vec):
num_vec = input("input numeric vector:")
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
def findMax():
reticulate::repl_python()
def findMax():
num_vec = input("input numeric vector:")
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
findMax()
10, 20, 30
def findMax():
num_vec = input("input numeric vector:")
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
findMax()
10,20,777
def findMax():
def findMax():
num_vec = int(input("input numeric vector:"))
type(num_vec)
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
findMax()
10
def findMax():
num_vec = list(map(int, input().split(',')))
type(num_vec)
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
return
sdf
def findMax():
num_vec = list(map(int, input().split(',')))
type(num_vec)
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
return
findMax()
findMax
findMax
findMax()
def findMax():
num_vec = list(map(int, input().split(',')))
type(num_vec)
n = len(num_vec)
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
findMax()
def findMax():
input_s = input("enter numeric vector:").split(" ")
n = len(input_s)
num_vec = []
for i in range(n)
num_vec.append(int(i))
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
def findMax():
input_s = input("enter numeric vector:").split(" ")
n = len(input_s)
num_vec = []
for i in input_s
num_vec.append(int(i))
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
def findMax():
input_s = input("enter numeric vector:").split(" ")
n = len(input_s)
num_vec = []
for i in input_s:
num_vec.append(int(i))
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
def findMax():
input_s = input("enter numeric vector:").split(" ")
n = len(input_s)
num_vec = []
for i in input_s:
num_vec.append(int(i))
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
def findMax():
input_s = input("enter numeric vector:").split(" ")
n = len(input_s)
num_vec = []
for i in input_s:
num_vec.append(int(i))
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
def findMax():
input_s = input("enter numeric vector:").split(" ")
n = len(input_s)
num_vec = []
for i in input_s:
num_vec.append(int(i))
max = num_vec[0]
for i in range(1, n):
if max < num_vec[i]:
max = num_vec[i]
print(max)
findMax()
10 20 30
findMax()
3 2 1
10 2999 30
findMax()
10 2999 3
devtools::install_github("ropensci/RSelenium")
install.packages("devtools")
devtools::install_github("ropensci/RSelenium")
if (!require(RSelenium)) {
install.packages("devtools")
devtools::install_github("johndharrison/binman")
devtools::install_github("johndharrison/wdman")
devtools::install_github("ropensci/RSelenium")
}
library(RSelenium)
devtools::install_github("ropensci/RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
library(RSelenium)
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444,
browserName = "chrome")
remDr$open()
install.packages("gghighlight")
devtools::install_github("gadenbuie/rsthemes")
install.packages("digest")
install.packages("digest")
mtcars
Y <- mtcars$mpg
X <- mtcars$wt
model <- lm(Y~X)
summary(model)
anova(model)
length(X)
qt(19.858, 30)
1-pt(19.858, 30)
1-pt(-5.3, 30)
1-pt(-5.3, 30)
1-pt(5.3, 30)
1-pt(-9.559,30)
1-2*pt(-9.559,30)
2*pt(-9.559,30)
2*pt(-2.7338,3)
2*pt(-5,11)
2*pt(2,11)
2*1-pt(2,11)
2*(1-pt(2,11))
qf(4, 1, 11)
1-pf(4, 1, 11)
# Casella & Berger
# Exercise 10.31 (e)
amputation <- matrix(c(34, 6, 19, 16), ncol = 2)
amputation
# Casella & Berger
# Exercise 10.31 (e)
amputation <- matrix(c(34, 6, 19, 16), ncol = 2,
dimnames = list(c(lived, diec), c(carbolic_acid, no_use)))
# Casella & Berger
# Exercise 10.31 (e)
amputation <- matrix(c(34, 6, 19, 16), ncol = 2,
dimnames = list(c("lived", "diec"),
c("carbolic_acid", "no_use")))
amputation
chisq.test(amputation)
chisq.test(amputation, correct = FALSE)
# Casella & Berger
# Exercise 10.31 (e)
amputation <- matrix(c(34, 6, 19, 16), ncol = 2,
dimnames = list(c("lived", "diec"),
c("carbolic_acid", "no_use")))
amputation
chisq.test(amputation, correct = FALSE)
# Exercise 8.53 (d)
x = seq(-2.5, 2.5, 0.05)
x
# Exercise 8.53 (d)
x_bar = seq(-2.5, 2.5, 0.05)
get_pValue <- function(x_bar, n){
2*(1-p(sqrt(n)*abs(x_bar)/sigma, 0, 1))
}
pValue <- get_pValue(x_bar, n = 9)
get_pValue <- function(x_bar, n){
2*(1-pnorm(sqrt(n)*abs(x_bar)/sigma, 0, 1))
}
pValue <- get_pValue(x_bar, n = 9)
get_pValue <- function(x_bar, sigma = 1, n = 9){
2*(1-pnorm(sqrt(n)*abs(x_bar)/sigma, 0, 1))
}
pValue <- get_pValue(x_bar, n = 9)
plot(x_bar, pValue)
plot(x_bar, pValue)
get_pValue(0.1, 1, 9)
pi
get_posterior <- funciton(x_bar, sigma, tau, n){
theta0 <- sqrt(n/(8*pi*sigma^2))*exp(-n*x_bar^2/(2*sigma^2))
thetaNot0 <- (1/sqrt(8*pi*(sigma^2/n+tau^2)))*exp(-x_bar^2/(2*(sigma^2/n+tau^2)))
theta0 / (theta0+thetaNot0)
}
get_posterior <- funciton(x_bar, sigma, tau, n){
theta0 <- sqrt(n/(8*pi*sigma^2))*exp(-n*x_bar^2/(2*sigma^2))
thetaNot0 <- (1/sqrt(8*pi*(sigma^2/n+tau^2)))*exp(-x_bar^2/(2*(sigma^2/n+tau^2)))
theta0/(theta0+thetaNot0)
}
get_posterior <- function(x_bar, sigma, tau, n){
theta0 <- sqrt(n/(8*pi*sigma^2))*exp(-n*x_bar^2/(2*sigma^2))
thetaNot0 <- (1/sqrt(8*pi*(sigma^2/n+tau^2)))*exp(-x_bar^2/(2*(sigma^2/n+tau^2)))
theta0/(theta0+thetaNot0)
}
get_posterior(0.1, sigma = 1, tau = 1, n = 9)
library(ggplot2)
df <- data.frame(pValue, posterior)
posterior <- get_posterior(x_bar, sigma = 1, tau = 1, n = 9)
df <- data.frame(pValue, posterior)
df <- data.frame(x_bar, pValue, posterior)
head(df)
# Exercise 8.53 (d)
library(tidyverse)
df <- data.frame(x_bar, pValue, posterior) %>%
pivot_longer(cols = c(pValue, posterior),
names_to = "y",
values_to = "value")
df <- data.frame(x_bar, pValue, posterior) %>%
pivot_longer(cols = c(pValue, posterior),
names_to = "type",
values_to = "value")
ggplot(df, aes(x, y, group = type)) +
geom_line()
ggplot(df, aes(x = x_bar, y = value, group = type)) +
geom_line()
ggplot(df, aes(x = x_bar, y = value, color = type)) +
geom_line()
ggplot(df, aes(x = x_bar, y = value, color = type)) +
geom_line() + theme_classic()
ggplot(df, aes(x = x_bar, y = value, color = type)) +
geom_line() + theme_bw()
# Exercise 8.53 (d)
library(ggplot2)
library(tidyr)
x_bar = seq(-2.5, 2.5, 0.05)
get_pValue <- function(x_bar, sigma = 1, n = 9){
2*(1-pnorm(sqrt(n)*abs(x_bar)/sigma, 0, 1))
}
pValue <- get_pValue(x_bar, n = 9)
get_posterior <- function(x_bar, sigma, tau, n){
theta0 <- sqrt(n/(8*pi*sigma^2))*exp(-n*x_bar^2/(2*sigma^2))
thetaNot0 <- (1/sqrt(8*pi*(sigma^2/n+tau^2)))*
exp(-x_bar^2/(2*(sigma^2/n+tau^2)))
theta0/(theta0+thetaNot0)
}
posterior <- get_posterior(x_bar, sigma = 1, tau = 1, n = 9)
df <- data.frame(x_bar, pValue, posterior) %>%
pivot_longer(cols = c(pValue, posterior),
names_to = "type",
values_to = "value")
ggplot(df, aes(x = x_bar, y = value, color = type)) +
geom_line() + theme_bw()
df %>% head()
x = rnorm(10, mean = 0, sd = 1)
x
mean(x)
x = rnorm(100000, mean = 0, sd = 1)
mean(x)
install.packages("Kendall")
install.packages(c("nlme", "lme4"))
library(lme4)
Dyestuff
D.aov <- aov(Yield ~ Batch, Dyestuff)
summary(D.aov)
anova(D.aov)
fm1ML <- lmer(Yield ~ 1 + (1|Batch), Dyestuff, REML = FALSE)
fm1ML
anova(fm1ML)
summary(fm1ML)
anova(fm1ML)
fm1ML
str(terms(fm1))
terms(fm1ML)
str(terms(fm1ML))
(fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy))
summary(fm1)
sleepstudy
D.lmer <- lmer(Yield ~ Batch, Dyesruff)
D.lmer <- lmer(Yield ~ Batch, Dyestuff)
D.lmer <- lmer(Yield ~ Batch + (1|Batch), Dyestuff)
summary(D.lmer)
anova(D.lmer)
anova(fm1ML)
anova(D.aov)
D.lmer
D.lmer <- lmer(Yield ~ Batch + (1 | Batch), Dyestuff, REML = FALSE)
summary(D.lmer)
D.lmer <- lmer(Yield ~ Batch + (1 | Batch), Dyestuff, REML = FALSE)
D.lmer <- lmer(Yield ~ Batch + (1 | Batch), Dyestuff)
summary(D.lmer)
anova(D.lmer)
D.lmer
anova(D.aov)
anova(D.lmer)
D.lmer <- lmer(Yield ~ Batch, Dyestuff)
summary(D.lmer)
D.lmer <- lmer(Yield ~ Batch + (1), Dyestuff)
anova(fm1)
summary(fm1)
w <- rbeta(10000, 1, 1)
k <- rgamma(10000, 0.01, 0.01)-2
k <- rgamma(10000, 0.01, 0.01)+2
theta <- rbeta(10000, w*(k-2)+1, (1-w)*(k-2)+1)
hist(theta)
w <- rbeta(100000, 1, 1)
k <- rgamma(100000, 0.01, 0.01)+2
theta <- rbeta(100000, w*(k-2)+1, (1-w)*(k-2)+1)
hist(theta)
w <- rbeta(100000, 1, 1)
k <- rgamma(100000, 0.1, 0.1)+2
theta <- rbeta(100000, w*(k-2)+1, (1-w)*(k-2)+1)
hist(theta)
k <- rgamma(100000, 0.001, 0.001)+2
theta <- rbeta(100000, w*(k-2)+1, (1-w)*(k-2)+1)
hist(theta)
hist(k)
k <- rgamma(100000, 0.1, 0.1)+2
hist(k)
library(ggplot2)
cars
mtcars
iris
library(tidyverse)
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_path()
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_path(arrow = arrow())
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_line(arrow = arrow())
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_path(arrow = arrow())
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()+
geom_path(arrow = arrow())
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()+
geom_line(arrow = arrow())
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()+
geom_path(arrow = arrow())
iris %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.25, "inches"),
ends = "last", type = "open"))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, colour = as.numeric(trial))) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.25, "inches"),
ends = "last", type = "open"))
ggplot(aes(x = Sepal.Length, y = Sepal.Width, group = trial) +
ggplot(aes(x = Sepal.Length, y = Sepal.Width, group = trial) +
) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.25, "inches"),
ends = "last", type = "open"))
ends = "last", type = "open"))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, group = trial)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.25, "inches"),
ends = "last", type = "open"))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, group = trial)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.25, "inches"),
ends = "last", type = "open"))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = trial)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.25, "inches"),
ends = "last", type = "open"))
iris %>% mutate(trial = 1:length(Sepal.Length))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = trial)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.5, "inches"),
ends = "last", type = "open"))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = trial)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.1, "inches"),
ends = "last", type = "open"))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = trial)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.1, "inches"),
ends = "last", type = "close"))
iris %>% mutate(trial = 1:length(Sepal.Length)) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = trial)) +
geom_point()+
geom_path(arrow = arrow(angle = 30, length = unit(0.1, "inches"),
ends = "last", type = "closed"))
library(bcp)
install.packages("bcp")
library(bcp)
example(bcp)
setwd("C:/Users/Nick Lin/OneDrive - g.ntu.edu.tw/109_心理碩二/迴歸分析/HW1")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
comment = ""
)
x <- seq(1, 10, by = 0.5)
beta <- c(50, 10)
y <- rnorm(n = length(x),
mean = beta[1]+beta[2]*x,
sd = 4)
plot(x, y)
library(tidyverse)
ggplot(sample, aes(x, y)) +
geom_point() + geom_smooth(method = "lm") + theme_classic()
library(tidyverse)
x <- seq(1, 10, by = 0.5)
beta <- c(50, 10)
y <- rnorm(n = length(x),
mean = beta[1]+beta[2]*x,
sd = 4)
sample <- tibble(x = x, y = y)
ggplot(sample, aes(x, y)) +
geom_point() + geom_smooth(method = "lm") + theme_classic()
theme_classic()
ggplot(sample, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm") +
scale_x_continuous(breaks = x) +
theme_classic()
knitr::opts_chunk$set(
echo = FALSE,	message = FALSE, 	warning = FALSE, 	comment = "",
fig.width = 5, fig.asp = 0.68, fig.align = center
)
knitr::opts_chunk$set(
echo = FALSE,	message = FALSE, 	warning = FALSE, comment = "",
fig.width = 5, fig.asp = 0.68, fig.align = center
)
